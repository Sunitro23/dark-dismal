version: "3.8"

services:
 app:
  build:
   context: ./
   dockerfile: Dockerfile
  ports:
   - 80:8080 # Maps the internal port 8080 to port 80 on the host
  volumes:
   - ./:/app # Mount the current directory to /app in the container
  environment:
   - PYTHONUNBUFFERED=1 # Makes Python output appear in Docker logs
  labels:
   - traefik.http.routers.app.rule=PathPrefix(`/app`)
   - traefik.http.services.app.loadbalancer.server.port=8080
   - traefik.http.middlewares.app-prefix.stripprefix.prefixes=/app
   - traefik.http.middlewares.app-prefix.stripprefix.forceSlash=false
   - traefik.http.routers.app.middlewares=app-prefix
  command: ["python", "main.py"] # The command to run your Python app

 # Traefik proxy setup for testing the application on a sub-path (localhost:8888/app)
 proxy:
  image: traefik:v2.3
  command:
   - --providers.docker
   - --api.insecure=true
   - --accesslog
   - --log
   - --api
  ports:
   - "8888:80" # Maps port 80 in the container to port 8888 on the host
  volumes:
   - /var/run/docker.sock:/var/run/docker.sock # Allows Traefik to access Docker events for routing
